getwd()
# visualizes the top ten words for each book.
nums <- words %>%
filter(book_type == "biblical") %>%
group_by(book) %>%
count(word, sort=TRUE) %>%
group_by(book) %>%
mutate(rank = rank(n))
library(gutenbergr)
library(dplyr)
library(stringr)
library(ggplot2)
library(ggthemes)
library(tibble)
library(jsonlite)
library(tidyverse)
library(tidytext)
# my personal plot theme for data visualizations.
my_theme <- theme_economist_white(gray_bg = FALSE) +
theme(plot.title = element_text(hjust = 0.5,
vjust = 10,
size = 10,
color = "#474747"),
plot.margin = unit(c(1.5, 1, 1.5, 1), "cm"),
axis.text = element_text(size = 9,
color = "gray30"),
axis.text.x=element_text(vjust = -2.5),
axis.title.x = element_text(size = 9,
color = "gray30",
vjust = -10),
axis.title.y = element_text(size = 9,
color = "gray30",
vjust = 10),
legend.direction = "vertical",
legend.position = "right",
legend.title = element_blank(),
legend.text = element_text(size = 11,
color = "gray20"),
legend.margin=margin(1, -15, 1, 0),
legend.spacing.x = unit(0.25, "cm"),
legend.key.size = unit(1, "cm"),
legend.key.height = unit(0.75, "cm"),
strip.text = element_text(hjust = 0.5,
vjust = 1,
size = 10,
color = "#474747"),
panel.spacing = unit(2, "lines"))
# opens the cleaned books data frame.
df <- read_csv("final_df.csv") %>%
mutate(book = str_replace_all(book, c("bible" = "the bible",
"quran" = "the quran")))
# breaks the text down into words and filters
# out words of less than 2 characters.
words <- df %>%
unnest_tokens(word, text) %>%
filter(nchar(word)>2)
# filters out stopwords.
words <- words %>%
filter(!word %in% stop_words$word)
# joins the words with their sentiment values.
sentiment <- inner_join(words, get_sentiments("nrc"))
# visualizes the top ten words for each book.
nums <- words %>%
filter(book_type == "biblical") %>%
group_by(book) %>%
count(word, sort=TRUE) %>%
group_by(book) %>%
mutate(rank = rank(n))
nums %>%
group_by(book) %>%
mutate(n = (n/sum(n))*100,
word = str_to_title(word),
book = str_to_title(str_replace_all(book, "_", " "))) %>%
filter(rank %in% (max(rank)-9):max(rank)) %>%
ggplot(aes(x=word,y=n,fill=book)) +
ggtitle("Popular Words") +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values = c("#00B6EB", "#FB61D7")) +
facet_wrap(~book,
scales = "free_x") +
scale_x_discrete(guide = guide_axis(n.dodge=2)) +
xlab("") +
ylab("Words (%)") +
my_theme
